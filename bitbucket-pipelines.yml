image: python:2.7

definitions:
  caches:
    data: ~/data
    venv: ~/venv
  steps:
    - step: &data
        name: Prepare data
        caches:
          - data
        script:
          - mkdir -p ~/data/bonev
          - if [ ! -d ~/data/bonev/clusters ]; then
          - wget -qO- -O tmp.zip https://www.dropbox.com/sh/hvoyhjc00m24o6m/AAAci5qaxsn7o9W-gToAeBiza?dl=1 && unzip tmp.zip -x / -d ~/data/bonev && rm tmp.zip; else
          - echo "data already present";
          - fi
    - step: &venv
        name: Prepare environment
        caches:
          - venv
        script:
          - if [ ! -f ~/venv/bin/activate ]; then
          - virtualenv ~/venv && source ~/venv/bin/activate && pip install $(grep numpy requirements.txt) && pip install -r requirements.txt; else
          - echo "venv already present";
          - fi
    - step: &test
        name: Run tests
        caches:
          - data
          - venv
        script:
          - source ~/venv/bin/activate
          - 'mkdir -p ~/.config/matplotlib && echo "backend: agg" > ~/.config/matplotlib/matplotlibrc'
          - flake8 fast3defdr
          - nosetests
          - python -m doctest README.md
        artifacts:
          - '*.png'
    - step: &update
        name: Update README
        script:
          - git checkout -b built/$BITBUCKET_BUILD_NUMBER
          - mv *.png images/
          - git add images/*
          - git commit -m "updating README images using $BITBUCKET_COMMIT"
          - git push origin built/$BITBUCKET_BUILD_NUMBER
    - step: &pypi
        name: PyPI
        script:
          - pip install docutils==0.14 && pip install twine
          - python setup.py sdist bdist_wheel
          - twine upload --repository-url https://pypi.gilgi.org -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*

pipelines:
  branches:
    'build/*':
      - step: *data
      - step: *venv
      - step: *test
      - step: *update
  tags:
    '*.*.*':
      - step: *data
      - step: *venv
      - step: *test
      - step: *pypi
